/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace HoloToolkit.XTools {

public class NetworkInMessage : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal NetworkInMessage(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NetworkInMessage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NetworkInMessage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          XToolsClientPINVOKE.delete_NetworkInMessage(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual byte ReadByte() {
    byte ret = XToolsClientPINVOKE.NetworkInMessage_ReadByte(swigCPtr);
    return ret;
  }

  public virtual short ReadInt16() {
    short ret = XToolsClientPINVOKE.NetworkInMessage_ReadInt16(swigCPtr);
    return ret;
  }

  public virtual int ReadInt32() {
    int ret = XToolsClientPINVOKE.NetworkInMessage_ReadInt32(swigCPtr);
    return ret;
  }

  public virtual long ReadInt64() {
    long ret = XToolsClientPINVOKE.NetworkInMessage_ReadInt64(swigCPtr);
    return ret;
  }

  public virtual float ReadFloat() {
    float ret = XToolsClientPINVOKE.NetworkInMessage_ReadFloat(swigCPtr);
    return ret;
  }

  public virtual double ReadDouble() {
    double ret = XToolsClientPINVOKE.NetworkInMessage_ReadDouble(swigCPtr);
    return ret;
  }

  public virtual XString ReadString() {
    global::System.IntPtr cPtr = XToolsClientPINVOKE.NetworkInMessage_ReadString(swigCPtr);
    XString ret = (cPtr == global::System.IntPtr.Zero) ? null : new XString(cPtr, true);
    return ret; 
  }

  public unsafe void ReadArray(byte[] data, uint arrayLength) {
    fixed ( byte* swig_ptrTo_data = data ) {
    {
      XToolsClientPINVOKE.NetworkInMessage_ReadArray(swigCPtr, (global::System.IntPtr)swig_ptrTo_data, arrayLength);
    }
    }
  }

  public virtual int GetUnreadBitsCount() {
    int ret = XToolsClientPINVOKE.NetworkInMessage_GetUnreadBitsCount(swigCPtr);
    return ret;
  }

  public virtual int GetSize() {
    int ret = XToolsClientPINVOKE.NetworkInMessage_GetSize(swigCPtr);
    return ret;
  }

}

}
